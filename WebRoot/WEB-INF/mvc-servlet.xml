<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	">
	
	
	<!-- 自定义验证器，手工注入国际化 -->
	<bean id="localValidatorFactoryBean" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	<mvc:annotation-driven validator="localValidatorFactoryBean"></mvc:annotation-driven>
	<!-- 配置表单验证框架不支持国际化所以要自己去添加 国际化-->
	<mvc:interceptors>
		
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="aa"></property>
		</bean>
		
		<mvc:interceptor>
		<!-- 指定拦截那个action -->
			<mvc:mapping path="/test2"/>
			<!-- 自己实现的拦截器类 --> 
			<bean class="com.et.lesson05.MyInteractor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
		<!-- 指定拦截那个action -->
			<mvc:mapping path="/tranx"/>
			<!-- 自己实现的拦截器类 --> 
			<bean class="com.et.lesson05.MyTaken"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 参数需要被零食存储在某 个地方当用户再次访问时使用之前的配置参数 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</bean>

	<!-- 配置视图解析器 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		添加前缀和后缀
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	-->
	<context:component-scan base-package="com.et"></context:component-scan>
	<!-- srpingmvc 配置拦截/ 所有的资源都被拦截 图片无法显示，将除控制层外的资源交回servlet处理控制 
		但是随之出现了 比如说 @RequestMapping(value="/showFood",method=RequestMethod.GET) 中存在 / 因为交给了servlet 所以
		说showFood  找不到了就报404 那么 应该告诉 servlet 有些资源不能交给servlet 那么是那些资源那 ？ 就是像
		 @RequestMapping(value="/showFood",method=RequestMethod.GET)
		 这样的资源；
		 所以说又要加个注解
		 <mvc:annotation-driven></mvc:annotation-driven>
		 他的作用就是告诉servlet 其他资源都交给servlet 除了带有注解的 这种就交给springmvc来处理
	-->
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	<context:property-placeholder
		location="classpath:/mysql.properties" />
	<!-- 开启文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	<!-- 数据源只是为了获取链接 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${url}"></property>
		<property name="username" value="${username1}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClassName" value="${driverClass}"></property>
		
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	

</beans>